---
// Props for potential configuration options
import  Flyer from "/src/assets/pages/homepage/welcomeflyer.jpg";
import  { Image } from "astro:assets";


---

<div id="flyerModal" class="modal-overlay">
  <div class="modal-content">
    <button class="modal-close" aria-label="Close flyer">
      <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
        <line x1="18" y1="6" x2="6" y2="18"></line>
        <line x1="6" y1="6" x2="18" y2="18"></line>
      </svg>
    </button>
    <div class="modal-image-container">
      <Image
	   src={Flyer} alt="Welcome Flyer" class="modal-image" />
    </div>
    <div class="modal-footer">
      <button class="modal-action-button">Register Now</button>
    </div>
  </div>
</div>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const modal = document.getElementById("flyerModal");
    const closeButton = modal?.querySelector(".modal-close");
    const actionButton = modal?.querySelector(".modal-action-button");

    // Handle close button click
    closeButton?.addEventListener("click", () => {
      closeModal();
    });

    // Handle overlay click to close
    modal?.addEventListener("click", (e) => {
      if (e.target === modal) {
        closeModal();
      }
    });

    // Handle action button click
    actionButton?.addEventListener("click", () => {
      window.location.href = "/register";
      closeModal();
    });

    // Handle escape key press
    document.addEventListener("keydown", (e) => {
      if (e.key === "Escape" && modal && !modal.classList.contains("hidden")) {
        closeModal();
      }
    });

    // Check if user already saw the flyer in this session/day
    const checkPreviousView = () => {
      const currentDate = new Date().toDateString();
      const lastSeen = localStorage.getItem('flyerLastSeen');

      if (lastSeen === currentDate) {
        modal?.classList.add('hidden');
      }
    };

    // Close modal function
    const closeModal = () => {
      modal?.classList.add("modal-closing");

      setTimeout(() => {
        modal?.classList.add("hidden");
        modal?.classList.remove("modal-closing");

        // Store today's date when closing
        const currentDate = new Date().toDateString();
        localStorage.setItem('flyerLastSeen', currentDate);
      }, 300);
    };

    // Run initial check
    checkPreviousView();
  });
</script>

<style>
  /* Base modal styles */
  .modal-overlay {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: rgba(0, 0, 0, 0.75);
    display: flex;
    justify-content: center;
    align-items: center;
    z-index: 10000;
    backdrop-filter: blur(8px);
    padding: 1.5rem;
    box-sizing: border-box;
  }

  .modal-content {
    position: relative;
    background: white;
    border-radius: 12px;
    width: 100%;
    max-width: 700px;
    max-height: 90vh;
    overflow: hidden;
    box-shadow: 0 25px 50px -12px rgba(0, 0, 0, 0.25);
    display: flex;
    flex-direction: column;
  }

  /* Image container - the star of the show */
  .modal-image-container {
    position: relative;
    overflow: hidden;
    background: white;
    flex: 1;
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .modal-image {
    width: 100%;
    height: auto;
    display: block;
    object-fit: contain;
  }

  /* Clean, minimal close button */
  .modal-close {
    position: absolute;
    top: 16px;
    right: 16px;
    background: rgba(255, 255, 255, 0.9);
    border: none;
    width: 36px;
    height: 36px;
    border-radius: 50%;
    cursor: pointer;
    display: flex;
    align-items: center;
    justify-content: center;
    color: #333;
    transition: all 0.2s ease;
    z-index: 1001;
    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
  }

  .modal-close:hover {
    background: #1A7A64;
    color: white;
    transform: scale(1.1);
  }

  /* Simple, clean footer */
  .modal-footer {
    padding: 1rem;
    display: flex;
    justify-content: center;
    background: white;
    border-top: 1px solid rgba(0, 0, 0, 0.05);
  }

  .modal-action-button {
    background: #1A7A64;
    color: white;
    border: none;
    padding: 0.8rem 2rem;
    border-radius: 6px;
    font-weight: 500;
    font-size: 1rem;
    cursor: pointer;
    transition: all 0.2s ease;
  }

  .modal-action-button:hover {
    background: #156A54;
    transform: translateY(-2px);
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
  }

  /* Simple, clean animations */
  @keyframes modalFadeIn {
    from {
      opacity: 0;
      transform: translateY(20px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  @keyframes modalFadeOut {
    from {
      opacity: 1;
      transform: translateY(0);
    }
    to {
      opacity: 0;
      transform: translateY(20px);
    }
  }

  .modal-overlay {
    animation: modalFadeIn 0.3s ease-out;
  }

  .modal-closing {
    animation: modalFadeOut 0.25s ease-out forwards;
    pointer-events: none;
  }

  /* Utility classes */
  .hidden {
    display: none;
  }

  /* Responsive adjustments */
  @media (max-width: 768px) {
    .modal-overlay {
      padding: 1rem;
    }

    .modal-content {
      max-height: calc(100vh - 2rem);
    }

    .modal-action-button {
      padding: 0.75rem 1.5rem;
    }
  }

  @media (max-width: 480px) {
    .modal-close {
      top: 10px;
      right: 10px;
      width: 32px;
      height: 32px;
    }
  }
</style>
