---
interface Topic {
  name: string;
  icon?: string;
}

interface Track {
  title: string;
  subtitle: string;
  image: string;
  description: string;
  topics?: string[];
  color?: string;
}

interface Props {
  title: string;
  subtitle?: string;
  description?: string;
  tracks: Track[];
  viewAllLink?: string;
}

const { title, subtitle, description, tracks, viewAllLink } = Astro.props;

// Define a set of colors for track cards if not specified
const defaultColors = [
  '#1A7A64', '#2E5EAA', '#9B4D85', '#D66853',
  '#2B8C67', '#5E6CA2', '#946B2D', '#466365'
];

// Icons for topics (using Heroicons)
const topicIcons = {
  "Microplastic": "microscope",
  "Detection": "magnifying-glass",
  "Recycling": "arrow-path",
  "Waste": "trash",
  "Policy": "document-text",
  "Climate": "globe-alt",
  "Technology": "cpu-chip",
  "Ecosystem": "sparkles",
  "Material": "beaker",
  "Education": "academic-cap",
  "AI": "chip",
  "Machine Learning": "variable",
  "Digital": "computer-desktop",
  "Environmental": "sun",
  "Health": "heart",
  "Biodegradable": "leaf",
  "Innovation": "light-bulb",
  "Sustainable": "check-badge",
  "Smart": "bolt",
  "Monitoring": "eye",
  "Modeling": "chart-bar",
  "Circular": "arrow-path",
};

function getIconForTopic(topic: string): string {
  for (const [key, value] of Object.entries(topicIcons)) {
    if (topic.toLowerCase().includes(key.toLowerCase())) {
      return value;
    }
  }
  return "tag"; // Default icon
}
---

<div class="py-20 bg-gradient-to-b from-white to-slate-50" id="conference-tracks">
  <div class="max-w-6xl mx-auto px-4">
    <!-- Standardized title styling across components -->
    <div class="text-center mb-16">
      <h2 class="text-[2.13rem] leading-9 font-semibold mb-6 text-[#2C3E50]">
        {title}
      </h2>

      <!-- Using the standardized gradient divider -->
      <div class="w-32 h-1 bg-gradient-to-r from-[#1A7A64] to-[#4ECDC4] rounded-full mx-auto mb-6"></div>

      {subtitle &&
        <p class="text-xl text-[#2C3E50]/80 mb-4 font-medium">
          {subtitle}
        </p>
      }

      {description &&
        <p class="max-w-3xl mx-auto text-[#2C3E50]/70 leading-relaxed">
          {description}
        </p>
      }

      <!-- Decorative elements for consistency -->
      <div class="relative mt-8 mb-12">
        <div class="absolute left-1/2 -translate-x-1/2 top-0 w-16 h-8">
          <div class="absolute left-0 top-0 w-2 h-2 rounded-full bg-[#1A7A64]/60"></div>
          <div class="absolute left-7 top-3 w-2 h-2 rounded-full bg-[#4ECDC4]/60"></div>
          <div class="absolute right-0 top-0 w-2 h-2 rounded-full bg-[#1A7A64]/60"></div>
        </div>
      </div>
    </div>

    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6">
      {tracks.map((track, index) => (
        <div
          class="track-card group relative overflow-hidden rounded-xl shadow-lg transition-all duration-300 hover:shadow-xl hover:-translate-y-1"
          style={`--card-color: ${track.color || defaultColors[index % defaultColors.length]}`}
        >
          <div class="absolute inset-0 bg-gradient-to-br from-black/60 to-black/20 z-10"></div>
          <div
            class="absolute bottom-0 left-0 right-0 h-1/2 bg-gradient-to-t from-black/80 to-transparent z-10"
          ></div>

          <div class="absolute top-0 left-0 w-full h-2 bg-[var(--card-color)] z-20"></div>

          <img
            src={track.image}
            alt={track.title}
            class="w-full h-64 object-cover transition-transform duration-500 group-hover:scale-105"
          />

          <div class="absolute inset-0 z-20 flex flex-col justify-end p-6 text-white">
            <div class="mb-2 inline-block px-3 py-1 bg-[var(--card-color)] rounded-full text-xs font-semibold tracking-wider">
              {track.subtitle}
            </div>
            <h3 class="text-2xl font-bold mb-2 group-hover:text-[var(--card-color)] transition-colors">
              {track.title}
            </h3>
            <p class="text-sm text-white/80 mb-4 line-clamp-2 group-hover:line-clamp-none transition-all duration-300">
              {track.description}
            </p>

            {track.topics && (
              <div class="flex flex-wrap gap-2 mt-auto opacity-0 group-hover:opacity-100 transition-opacity duration-300">
                {track.topics.slice(0, 3).map((topic) => (
                  <span class="inline-flex items-center gap-1 bg-white/20 backdrop-blur-sm px-2 py-1 rounded-full text-xs font-medium">
                    <svg xmlns="http://www.w3.org/2000/svg" class="h-3 w-3" viewBox="0 0 20 20" fill="currentColor">
                      <use href={`/src/assets/icons/heroicons/${getIconForTopic(topic)}.svg#icon`}></use>
                    </svg>
                    {topic}
                  </span>
                ))}
                {track.topics.length > 3 && (
                  <span class="inline-block bg-white/20 backdrop-blur-sm px-2 py-1 rounded-full text-xs font-medium">
                    +{track.topics.length - 3} more
                  </span>
                )}
              </div>
            )}

            <div class="absolute top-5 right-5 bg-white/20 backdrop-blur-sm p-2 rounded-full opacity-0 group-hover:opacity-100 transition-opacity">
              <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M14 5l7 7m0 0l-7 7m7-7H3" />
              </svg>
            </div>
          </div>

          <a href={`/tracks/${track.title.toLowerCase().replace(/\s+/g, '-')}`} class="absolute inset-0 z-30" aria-label={`Learn more about ${track.title}`}></a>
        </div>
      ))}
    </div>

  </div>
</div>

<style>
  /* Styles remain the same */
  .track-card {
    transition: transform 0.3s ease, box-shadow 0.3s ease;
  }

  .track-card:hover {
    box-shadow: 0 20px 25px -5px rgb(0 0 0 / 0.1), 0 8px 10px -6px rgb(0 0 0 / 0.1);
  }

  /* Staggered hover effect for grid items */
  @media (min-width: 1024px) {
    .track-card:nth-child(odd):hover {
      transform: translateY(-8px) rotate(-1deg);
    }

    .track-card:nth-child(even):hover {
      transform: translateY(-8px) rotate(1deg);
    }
  }

  .line-clamp-2 {
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }

  /* Animation for the decorative elements */
  @keyframes float-slow {
    0%, 100% {
      transform: translateY(0);
    }
    50% {
      transform: translateY(-5px);
    }
  }

  .track-card::after {
    content: "";
    position: absolute;
    bottom: 0;
    left: 0;
    width: 100%;
    height: 5px;
    background: var(--card-color);
    transform: scaleX(0);
    transform-origin: left;
    transition: transform 0.5s ease;
    z-index: 25;
  }

  .track-card:hover::after {
    transform: scaleX(1);
  }
</style>
